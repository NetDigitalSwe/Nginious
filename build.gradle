configurations {
	asm
}

configurations {
	log4j
}

repositories {
	mavenCentral()
}
	
dependencies {
	asm group: 'asm', name: 'asm', version: '3.3.1'
	log4j group: 'log4j', name: 'log4j', version: '1.2.17'
}

subprojects {
	apply plugin: 'java'
	
	repositories {
		mavenCentral()
	}
}

configure(rootProject) {
	
	task eclipse(type: Copy) {
		destinationDir = new File('nginious-eclipse/libs')
		
		
		from(configurations.asm.asPath) {
        	into ''
        }
        
        from(configurations.log4j.asPath) {
        	into ''
       	}
        
        from('nginious-server/libs/json.jar') {
        	into ''
		}
		
		from('nginious-api/build/libs') {
			into ''
			include 'nginious-api-*.jar'
			rename '(.*)', 'nginious-api.jar'
		}
		
		from('nginious-server/build/libs') {
			into ''
			include 'nginious-server-*.jar'
			rename '(.*)', 'nginious-server.jar'
			exclude '*testload*'
		}
	}
	
	task tarDist(type: Tar) {
		includeEmptyDirs = true
		group = 'Distribution'
		compression = Compression.GZIP
		classifier = 'dist'
		description = "Builds ${classifier} archive, containing all jars and docs"
		destinationDir = new File('build/distributions')
		archiveName = "${project.name}-${project.version}-dist.tgz"
		
		ext.baseDir = "${project.name}-${project.version}";
		
		mkdir('build/logs/logs');
		mkdir('build/webapps/webapps');
			
		from('build/logs') {
			into "${baseDir}"
		}
		
		from('build/webapps') {
			into "${baseDir}"
		}
		
		from('src/dist') {
            include 'README'
            include 'LICENSE'
            into "${baseDir}"
            expand(copyright: new Date().format('yyyy'), version: project.version)
        }
        
        from(configurations.asm.asPath) {
        	into "${baseDir}/libs/ext"
        }
		
		from(configurations.log4j.asPath) {
			into "${baseDir}/libs/ext"
		}
		
		from('src/reference') {
			into "${baseDir}/doc"
		}
		
		from('nginious-server/libs/json.jar') {
        	into "${baseDir}/libs/ext"
		}
				
		subprojects.findAll({ subproject -> subproject.name == "nginious-api" }).each { subproject ->
            into ("${baseDir}/doc/api") {
                from subproject.javadoc
            }
		}
		
		subprojects.each { subproject ->
            into ("${baseDir}/libs") {
                from subproject.jar
            }
		}
        
        from('bin/start.sh') {
        	into "${baseDir}/bin"
        }
    }
    
    task zipDist(type: Zip) {
		includeEmptyDirs = true
		group = 'Distribution'
		classifier = 'dist'
		description = "Builds ${classifier} archive, containing all jars and docs"
		destinationDir = new File('build/distributions')
		archiveName = "${project.name}-${project.version}-dist.zip"
		
		ext.baseDir = "${project.name}-${project.version}";
		
		mkdir('build/logs/logs');
		mkdir('build/webapps/webapps');
			
		from('build/logs') {
			into "${baseDir}"
		}
		
		from('build/webapps') {
			into "${baseDir}"
		}
		
		from('src/dist') {
            include 'README'
            include 'LICENSE'
            into "${baseDir}"
            expand(copyright: new Date().format('yyyy'), version: project.version)
        }
        
        from(configurations.asm.asPath) {
        	into "${baseDir}/libs/ext"
        }
		
		from('src/reference') {
			into "${baseDir}/doc"
		}
		
		from('nginious-server/libs/json.jar') {
        	into "${baseDir}/libs/ext"
		}
				
		subprojects.findAll({ subproject -> subproject.name == "nginious-api" }).each { subproject ->
            into ("${baseDir}/doc/api") {
                from subproject.javadoc
            }
		}
		
		subprojects.each { subproject ->
            into ("${baseDir}/libs") {
                from subproject.jar
            }
		}
        
        from('bin/start.sh') {
        	into "${baseDir}/bin"
        }    
    }
    
	task dist() {
		dist.dependsOn = [zipDist, tarDist]
	}	
}
